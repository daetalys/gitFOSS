- @no_container = true
- breadcrumb_title _('Dashboard')

%div{ class: container_class }
  = render_if_exists 'admin/licenses/breakdown', license: @license

  .admin-dashboard.prepend-top-default
    .row
      .col-sm-4
        .info-well.dark-well
          .well-segment.well-centered
            = link_to admin_projects_path do
              %h3.text-center
                = _('Projects:')
                = approximate_count_with_delimiters(@counts, Project)
            %hr
            = link_to(_('New project'), new_project_path, class: "btn btn-success")
      .col-sm-4
        .info-well.dark-well
          .well-segment.well-centered
            = link_to admin_users_path do
              %h3.text-center
                = _('Users:')
                = approximate_count_with_delimiters(@counts, User)
            = render_if_exists 'admin/dashboard/users_statistics'
            %hr
            = link_to _('New user'), new_admin_user_path, class: "btn btn-success"
      .col-sm-4
        .info-well.dark-well
          .well-segment.well-centered
            = link_to admin_groups_path do
              %h3.text-center
                = _('Groups:')
                = approximate_count_with_delimiters(@counts, Group)
            %hr
            = link_to _('New group'), new_admin_group_path, class: "btn btn-success"
    .row
      .col-md-4
        .info-well
          .well-segment.admin-well.admin-well-statistics
            %h4= _('Statistics')
            %p
              = _('Forks')
              %span.light.float-right
                = approximate_fork_count_with_delimiters(@counts)
            %p
              = _('Issues')
              %span.light.float-right
                = approximate_count_with_delimiters(@counts, Issue)
            %p
              = _('Merge Requests')
              %span.light.float-right
                = approximate_count_with_delimiters(@counts, MergeRequest)
            %p
              = _('Notes')
              %span.light.float-right
                = approximate_count_with_delimiters(@counts, Note)
            %p
              = _('Snippets')
              %span.light.float-right
                = approximate_count_with_delimiters(@counts, Snippet)
            %p
              = _('SSH Keys')
              %span.light.float-right
                = approximate_count_with_delimiters(@counts, Key)
            %p
              = _('Milestones')
              %span.light.float-right
                = approximate_count_with_delimiters(@counts, Milestone)
            %p
              = _('Active Users')
              %span.light.float-right
                = number_with_delimiter(User.active.count)
      .col-md-4
        .info-well
          .well-segment.admin-well.admin-well-features
            %h4= _('Features')
            %p{ "aria-label" => _("Sign up: status %{status}") % { status: allow_signup? ? "on" : "off" } }
              = _('Sign up')
              %span.light.float-right
                = boolean_to_icon allow_signup?
            %p{ "aria-label" => _("LDAP: status %{status}") % { status: Gitlab.config.ldap.enabled ? "on" : "off" } }
              = _('LDAP')
              %span.light.float-right
                = boolean_to_icon Gitlab.config.ldap.enabled
            %p{ "aria-label" => _("Gravatar: status %{status}") % { status: gravatar_enabled? ? "on" : "off" } }
              = _('Gravatar')
              %span.light.float-right
                = boolean_to_icon gravatar_enabled?
            %p{ "aria-label" => _("OmniAuth: status %{status}") % { status: Gitlab::Auth.omniauth_enabled? ? "on" : "off" } }
              = _('OmniAuth')
              %span.light.float-right
                = boolean_to_icon Gitlab::Auth.omniauth_enabled?
            %p{ "aria-label" => _("Reply by email: status %{status}") % { status: Gitlab::IncomingEmail.enabled? ? "on" : "off" } }
              = _('Reply by email')
              %span.light.float-right
                = boolean_to_icon Gitlab::IncomingEmail.enabled?

            = render_if_exists 'admin/dashboard/elastic_and_geo'

            %p{ "aria-label" => _("Container Registry: status %{status}") % { status: Gitlab.config.registry.enabled ? "on" : "off" } }
              = _('Container Registry')
              %span.light.float-right
                = boolean_to_icon Gitlab.config.registry.enabled
            - gitlab_pages_enabled = Gitlab.config.pages.enabled
            %p{ "aria-label" => _("GitLab Pages: status %{status}") % { status: gitlab_pages_enabled ? "on" : "off" } }
              = _('GitLab Pages')
              %span.light.float-right
                = boolean_to_icon gitlab_pages_enabled
            - gitlab_shared_runners_enabled = Gitlab.config.gitlab_ci.shared_runners_enabled
            %p{ "aria-label" => _("Shared Runners: status %{status}") % { status: gitlab_shared_runners_enabled ? "on" : "off" } }
              = _('Shared Runners')
              %span.light.float-right
                = boolean_to_icon gitlab_shared_runners_enabled
      .col-md-4
        .info-well
          .well-segment.admin-well
            %h4
              = _('Components')
              - if Gitlab::CurrentSettings.version_check_enabled
                .float-right
                  = version_status_badge
            %p
              = _('GitLab')
              %span.float-right
                = Gitlab::VERSION
                = "(#{Gitlab.revision})"
            %p
              = _('GitLab Shell')
              %span.float-right
                = Gitlab::Shell.new.version
            %p
              = _('GitLab Workhorse')
              %span.float-right
                = gitlab_workhorse_version
            %p
              = _('GitLab API')
              %span.float-right
                = API::API::version
            - if Gitlab.config.pages.enabled
              %p
                = _('GitLab Pages')
                %span.float-right
                  = Gitlab::Pages::VERSION

            = render_if_exists 'admin/dashboard/geo'

            %p
              = _('Ruby')
              %span.float-right
                #{RUBY_VERSION}p#{RUBY_PATCHLEVEL}
            %p
              = _('Rails')
              %span.float-right
                #{Rails::VERSION::STRING}
            %p
              = Gitlab::Database.adapter_name
              %span.float-right
                = Gitlab::Database.version
            %p
              = link_to _("Gitaly Servers"), admin_gitaly_servers_path
    .row
      .col-md-4
        .info-well
          .well-segment.admin-well
            %h4= _('Latest projects')
            - @projects.each do |project|
              %p
                = link_to project.full_name, admin_project_path(project), class: 'str-truncated-60'
                %span.light.float-right
                  #{time_ago_with_tooltip(project.created_at)}
      .col-md-4
        .info-well
          .well-segment.admin-well
            %h4= _('Latest users')
            - @users.each do |user|
              %p
                = link_to [:admin, user], class: 'str-truncated-60' do
                  = user.name
                %span.light.float-right
                  #{time_ago_with_tooltip(user.created_at)}
      .col-md-4
        .info-well
          .well-segment.admin-well
            %h4= _('Latest groups')
            - @groups.each do |group|
              %p
                = link_to [:admin, group], class: 'str-truncated-60' do
                  = group.full_name
                %span.light.float-right
                  #{time_ago_with_tooltip(group.created_at)}
