- return unless can?(current_user, :read_environment, @project)

- setting = error_tracking_setting
- p @project.id
- p namespace_project_list_projects_url(project_id: @project, namespace_id: @project.namespace)

%section.settings.expanded.border-0.no-animate
  .settings-header
    %h4
      = _('Error Tracking')
    %p
      = _('To link Sentry to GitLab, enter your Sentry URL and Auth Token.')
  .settings-content
    = form_for @project, url: project_settings_operations_path(@project), method: :patch, :html => {:class => 'edit_project js-error-tracking-form'} do |f|
      = form_errors(@project)
      .form-group
        = f.fields_for :error_tracking_setting_attributes, setting do |form|
          .form-check.form-group
            = form.check_box :enabled, class: 'form-check-input'
            = form.label :enabled, _('Active'), class: 'form-check-label'
          .form-group
            = form.label :api_url, _('Sentry API URL'), class: 'label-bold'
            = form.url_field :api_url, class: 'form-control', placeholder: _('https://mysentryserver.com'), id: 'js-error-tracking-api-url'
            %p.form-text.text-muted
              = _('Enter your Sentry API URL')
          .form-group
            = form.label :token, _('Auth Token'), class: 'label-bold'
            -# TODO: is there a better way to do this?
            .clearfix
            -# TODO: figure out why form-control-inline gets overridden. Remove hardcoded style.
            = form.text_field :token, class: 'form-control form-control-inline', style: 'width: auto;', id: 'js-error-tracking-token'
            .btn.btn-success.prepend-left-10#js-error-tracking-list-projects{ data: { list_projects_endpoint: namespace_project_list_projects_url(project_id: @project, namespace_id: @project.namespace) } }
              = _('Connect')
            %p.form-text.text-muted
              = _('Find and manage Auth Tokens in your Sentry account settings page.')

          .form-group
            %label.label-bold
              = _('Project')
            .dropdown#vue-dropdown-placeholder{ data: { project: { id: '1', name: 'Test Project' }} }
              %button.dropdown-menu-toggle.dropdown-menu-full-width.js-dropdown-toggle{ type: 'button', disabled: true }
                %span.dropdown-toggle-text
                  = _('Select project')
                  = icon('chevron-down')

      = f.submit _('Save changes'), class: 'btn btn-success'
